package com.github.simonpercic.responseecho.manager;

// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: Users/simon/Projects/Personal/Android/OkLog/shared/src/main/proto/logdata/logdata.proto at 10:1

import com.github.simonpercic.oklog.shared.data.BodyState;
import com.github.simonpercic.oklog.shared.data.HeaderData;
import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.List;
import okio.ByteString;

public final class LogData extends Message<LogData, LogData.Builder> {
    public static final ProtoAdapter<LogData> ADAPTER = new ProtoAdapter_LogData();

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_REQUEST_METHOD = "";

    public static final String DEFAULT_REQUEST_URL = "";

    public static final String DEFAULT_PROTOCOL = "";

    public static final String DEFAULT_REQUEST_CONTENT_TYPE = "";

    public static final Long DEFAULT_REQUEST_CONTENT_LENGTH = 0L;

    public static final BodyState DEFAULT_REQUEST_BODY_STATE = BodyState.PLAIN_BODY;

    public static final Boolean DEFAULT_REQUEST_FAILED = false;

    public static final Integer DEFAULT_RESPONSE_CODE = 0;

    public static final String DEFAULT_RESPONSE_MESSAGE = "";

    public static final Long DEFAULT_RESPONSE_DURATION_MS = 0L;

    public static final Long DEFAULT_RESPONSE_CONTENT_LENGTH = 0L;

    public static final BodyState DEFAULT_RESPONSE_BODY_STATE = BodyState.PLAIN_BODY;

    public static final Long DEFAULT_RESPONSE_BODY_SIZE = 0L;

    public static final String DEFAULT_RESPONSE_URL = "";

    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String request_method;

    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String request_url;

    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String protocol;

    @WireField(
            tag = 4,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String request_content_type;

    @WireField(
            tag = 5,
            adapter = "com.squareup.wire.ProtoAdapter#INT64"
    )
    public final Long request_content_length;

    @WireField(
            tag = 6,
            adapter = "com.github.simonpercic.oklog.shared.data.HeaderData#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<HeaderData> request_headers;

    @WireField(
            tag = 7,
            adapter = "com.github.simonpercic.oklog.shared.data.BodyState#ADAPTER"
    )
    public final BodyState request_body_state;

    @WireField(
            tag = 8,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean request_failed;

    @WireField(
            tag = 9,
            adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer response_code;

    @WireField(
            tag = 10,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String response_message;

    @WireField(
            tag = 11,
            adapter = "com.squareup.wire.ProtoAdapter#INT64"
    )
    public final Long response_duration_ms;

    @WireField(
            tag = 12,
            adapter = "com.squareup.wire.ProtoAdapter#INT64"
    )
    public final Long response_content_length;

    @WireField(
            tag = 13,
            adapter = "com.github.simonpercic.oklog.shared.data.HeaderData#ADAPTER",
            label = WireField.Label.REPEATED
    )
    public final List<HeaderData> response_headers;

    @WireField(
            tag = 14,
            adapter = "com.github.simonpercic.oklog.shared.data.BodyState#ADAPTER"
    )
    public final BodyState response_body_state;

    @WireField(
            tag = 15,
            adapter = "com.squareup.wire.ProtoAdapter#INT64"
    )
    public final Long response_body_size;

    @WireField(
            tag = 16,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String response_url;

    public LogData(String request_method, String request_url, String protocol, String request_content_type, Long request_content_length, List<HeaderData> request_headers, BodyState request_body_state, Boolean request_failed, Integer response_code, String response_message, Long response_duration_ms, Long response_content_length, List<HeaderData> response_headers, BodyState response_body_state, Long response_body_size, String response_url) {
        this(request_method, request_url, protocol, request_content_type, request_content_length, request_headers, request_body_state, request_failed, response_code, response_message, response_duration_ms, response_content_length, response_headers, response_body_state, response_body_size, response_url, ByteString.EMPTY);
    }

    public LogData(String request_method, String request_url, String protocol, String request_content_type, Long request_content_length, List<HeaderData> request_headers, BodyState request_body_state, Boolean request_failed, Integer response_code, String response_message, Long response_duration_ms, Long response_content_length, List<HeaderData> response_headers, BodyState response_body_state, Long response_body_size, String response_url, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.request_method = request_method;
        this.request_url = request_url;
        this.protocol = protocol;
        this.request_content_type = request_content_type;
        this.request_content_length = request_content_length;
        this.request_headers = Internal.immutableCopyOf("request_headers", request_headers);
        this.request_body_state = request_body_state;
        this.request_failed = request_failed;
        this.response_code = response_code;
        this.response_message = response_message;
        this.response_duration_ms = response_duration_ms;
        this.response_content_length = response_content_length;
        this.response_headers = Internal.immutableCopyOf("response_headers", response_headers);
        this.response_body_state = response_body_state;
        this.response_body_size = response_body_size;
        this.response_url = response_url;
    }

    @Override
    public LogData.Builder newBuilder() {
        LogData.Builder builder = new LogData.Builder();
        builder.request_method = request_method;
        builder.request_url = request_url;
        builder.protocol = protocol;
        builder.request_content_type = request_content_type;
        builder.request_content_length = request_content_length;
        builder.request_headers = Internal.copyOf("request_headers", request_headers);
        builder.request_body_state = request_body_state;
        builder.request_failed = request_failed;
        builder.response_code = response_code;
        builder.response_message = response_message;
        builder.response_duration_ms = response_duration_ms;
        builder.response_content_length = response_content_length;
        builder.response_headers = Internal.copyOf("response_headers", response_headers);
        builder.response_body_state = response_body_state;
        builder.response_body_size = response_body_size;
        builder.response_url = response_url;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof com.github.simonpercic.oklog.shared.data.LogData)) return false;
        com.github.simonpercic.oklog.shared.data.LogData o = (com.github.simonpercic.oklog.shared.data.LogData) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(request_method, o.request_method)
                && Internal.equals(request_url, o.request_url)
                && Internal.equals(protocol, o.protocol)
                && Internal.equals(request_content_type, o.request_content_type)
                && Internal.equals(request_content_length, o.request_content_length)
                && request_headers.equals(o.request_headers)
                && Internal.equals(request_body_state, o.request_body_state)
                && Internal.equals(request_failed, o.request_failed)
                && Internal.equals(response_code, o.response_code)
                && Internal.equals(response_message, o.response_message)
                && Internal.equals(response_duration_ms, o.response_duration_ms)
                && Internal.equals(response_content_length, o.response_content_length)
                && response_headers.equals(o.response_headers)
                && Internal.equals(response_body_state, o.response_body_state)
                && Internal.equals(response_body_size, o.response_body_size)
                && Internal.equals(response_url, o.response_url);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (request_method != null ? request_method.hashCode() : 0);
            result = result * 37 + (request_url != null ? request_url.hashCode() : 0);
            result = result * 37 + (protocol != null ? protocol.hashCode() : 0);
            result = result * 37 + (request_content_type != null ? request_content_type.hashCode() : 0);
            result = result * 37 + (request_content_length != null ? request_content_length.hashCode() : 0);
            result = result * 37 + request_headers.hashCode();
            result = result * 37 + (request_body_state != null ? request_body_state.hashCode() : 0);
            result = result * 37 + (request_failed != null ? request_failed.hashCode() : 0);
            result = result * 37 + (response_code != null ? response_code.hashCode() : 0);
            result = result * 37 + (response_message != null ? response_message.hashCode() : 0);
            result = result * 37 + (response_duration_ms != null ? response_duration_ms.hashCode() : 0);
            result = result * 37 + (response_content_length != null ? response_content_length.hashCode() : 0);
            result = result * 37 + response_headers.hashCode();
            result = result * 37 + (response_body_state != null ? response_body_state.hashCode() : 0);
            result = result * 37 + (response_body_size != null ? response_body_size.hashCode() : 0);
            result = result * 37 + (response_url != null ? response_url.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (request_method != null) builder.append(", request_method=").append(request_method);
        if (request_url != null) builder.append(", request_url=").append(request_url);
        if (protocol != null) builder.append(", protocol=").append(protocol);
        if (request_content_type != null) builder.append(", request_content_type=").append(request_content_type);
        if (request_content_length != null) builder.append(", request_content_length=").append(request_content_length);
        if (!request_headers.isEmpty()) builder.append(", request_headers=").append(request_headers);
        if (request_body_state != null) builder.append(", request_body_state=").append(request_body_state);
        if (request_failed != null) builder.append(", request_failed=").append(request_failed);
        if (response_code != null) builder.append(", response_code=").append(response_code);
        if (response_message != null) builder.append(", response_message=").append(response_message);
        if (response_duration_ms != null) builder.append(", response_duration_ms=").append(response_duration_ms);
        if (response_content_length != null) builder.append(", response_content_length=").append(response_content_length);
        if (!response_headers.isEmpty()) builder.append(", response_headers=").append(response_headers);
        if (response_body_state != null) builder.append(", response_body_state=").append(response_body_state);
        if (response_body_size != null) builder.append(", response_body_size=").append(response_body_size);
        if (response_url != null) builder.append(", response_url=").append(response_url);
        return builder.replace(0, 2, "LogData{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<LogData, LogData.Builder> {
        public String request_method;

        public String request_url;

        public String protocol;

        public String request_content_type;

        public Long request_content_length;

        public List<HeaderData> request_headers;

        public BodyState request_body_state;

        public Boolean request_failed;

        public Integer response_code;

        public String response_message;

        public Long response_duration_ms;

        public Long response_content_length;

        public List<HeaderData> response_headers;

        public BodyState response_body_state;

        public Long response_body_size;

        public String response_url;

        public Builder() {
            request_headers = Internal.newMutableList();
            response_headers = Internal.newMutableList();
        }

        public LogData.Builder request_method(String request_method) {
            this.request_method = request_method;
            return this;
        }

        public LogData.Builder request_url(String request_url) {
            this.request_url = request_url;
            return this;
        }

        public LogData.Builder protocol(String protocol) {
            this.protocol = protocol;
            return this;
        }

        public LogData.Builder request_content_type(String request_content_type) {
            this.request_content_type = request_content_type;
            return this;
        }

        public LogData.Builder request_content_length(Long request_content_length) {
            this.request_content_length = request_content_length;
            return this;
        }

        public LogData.Builder request_headers(List<HeaderData> request_headers) {
            Internal.checkElementsNotNull(request_headers);
            this.request_headers = request_headers;
            return this;
        }

        public LogData.Builder request_body_state(BodyState request_body_state) {
            this.request_body_state = request_body_state;
            return this;
        }

        public LogData.Builder request_failed(Boolean request_failed) {
            this.request_failed = request_failed;
            return this;
        }

        public LogData.Builder response_code(Integer response_code) {
            this.response_code = response_code;
            return this;
        }

        public LogData.Builder response_message(String response_message) {
            this.response_message = response_message;
            return this;
        }

        public LogData.Builder response_duration_ms(Long response_duration_ms) {
            this.response_duration_ms = response_duration_ms;
            return this;
        }

        public LogData.Builder response_content_length(Long response_content_length) {
            this.response_content_length = response_content_length;
            return this;
        }

        public LogData.Builder response_headers(List<HeaderData> response_headers) {
            Internal.checkElementsNotNull(response_headers);
            this.response_headers = response_headers;
            return this;
        }

        public LogData.Builder response_body_state(BodyState response_body_state) {
            this.response_body_state = response_body_state;
            return this;
        }

        public LogData.Builder response_body_size(Long response_body_size) {
            this.response_body_size = response_body_size;
            return this;
        }

        public LogData.Builder response_url(String response_url) {
            this.response_url = response_url;
            return this;
        }

        @Override
        public LogData build() {
            return new LogData(request_method, request_url, protocol, request_content_type, request_content_length, request_headers, request_body_state, request_failed, response_code, response_message, response_duration_ms, response_content_length, response_headers, response_body_state, response_body_size, response_url, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_LogData extends ProtoAdapter<LogData> {
        ProtoAdapter_LogData() {
            super(FieldEncoding.LENGTH_DELIMITED, LogData.class);
        }

        @Override
        public int encodedSize(LogData value) {
            return (value.request_method != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.request_method) : 0)
                    + (value.request_url != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.request_url) : 0)
                    + (value.protocol != null ? ProtoAdapter.STRING.encodedSizeWithTag(3, value.protocol) : 0)
                    + (value.request_content_type != null ? ProtoAdapter.STRING.encodedSizeWithTag(4, value.request_content_type) : 0)
                    + (value.request_content_length != null ? ProtoAdapter.INT64.encodedSizeWithTag(5, value.request_content_length) : 0)
                    + HeaderData.ADAPTER.asRepeated().encodedSizeWithTag(6, value.request_headers)
                    + (value.request_body_state != null ? BodyState.ADAPTER.encodedSizeWithTag(7, value.request_body_state) : 0)
                    + (value.request_failed != null ? ProtoAdapter.BOOL.encodedSizeWithTag(8, value.request_failed) : 0)
                    + (value.response_code != null ? ProtoAdapter.INT32.encodedSizeWithTag(9, value.response_code) : 0)
                    + (value.response_message != null ? ProtoAdapter.STRING.encodedSizeWithTag(10, value.response_message) : 0)
                    + (value.response_duration_ms != null ? ProtoAdapter.INT64.encodedSizeWithTag(11, value.response_duration_ms) : 0)
                    + (value.response_content_length != null ? ProtoAdapter.INT64.encodedSizeWithTag(12, value.response_content_length) : 0)
                    + HeaderData.ADAPTER.asRepeated().encodedSizeWithTag(13, value.response_headers)
                    + (value.response_body_state != null ? BodyState.ADAPTER.encodedSizeWithTag(14, value.response_body_state) : 0)
                    + (value.response_body_size != null ? ProtoAdapter.INT64.encodedSizeWithTag(15, value.response_body_size) : 0)
                    + (value.response_url != null ? ProtoAdapter.STRING.encodedSizeWithTag(16, value.response_url) : 0)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, LogData value) throws IOException {
            if (value.request_method != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.request_method);
            if (value.request_url != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.request_url);
            if (value.protocol != null) ProtoAdapter.STRING.encodeWithTag(writer, 3, value.protocol);
            if (value.request_content_type != null) ProtoAdapter.STRING.encodeWithTag(writer, 4, value.request_content_type);
            if (value.request_content_length != null) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.request_content_length);
            HeaderData.ADAPTER.asRepeated().encodeWithTag(writer, 6, value.request_headers);
            if (value.request_body_state != null) BodyState.ADAPTER.encodeWithTag(writer, 7, value.request_body_state);
            if (value.request_failed != null) ProtoAdapter.BOOL.encodeWithTag(writer, 8, value.request_failed);
            if (value.response_code != null) ProtoAdapter.INT32.encodeWithTag(writer, 9, value.response_code);
            if (value.response_message != null) ProtoAdapter.STRING.encodeWithTag(writer, 10, value.response_message);
            if (value.response_duration_ms != null) ProtoAdapter.INT64.encodeWithTag(writer, 11, value.response_duration_ms);
            if (value.response_content_length != null) ProtoAdapter.INT64.encodeWithTag(writer, 12, value.response_content_length);
            HeaderData.ADAPTER.asRepeated().encodeWithTag(writer, 13, value.response_headers);
            if (value.response_body_state != null) BodyState.ADAPTER.encodeWithTag(writer, 14, value.response_body_state);
            if (value.response_body_size != null) ProtoAdapter.INT64.encodeWithTag(writer, 15, value.response_body_size);
            if (value.response_url != null) ProtoAdapter.STRING.encodeWithTag(writer, 16, value.response_url);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public LogData decode(ProtoReader reader) throws IOException {
            LogData.Builder builder = new LogData.Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1;) {
                switch (tag) {
                    case 1: builder.request_method(ProtoAdapter.STRING.decode(reader)); break;
                    case 2: builder.request_url(ProtoAdapter.STRING.decode(reader)); break;
                    case 3: builder.protocol(ProtoAdapter.STRING.decode(reader)); break;
                    case 4: builder.request_content_type(ProtoAdapter.STRING.decode(reader)); break;
                    case 5: builder.request_content_length(ProtoAdapter.INT64.decode(reader)); break;
                    case 6: builder.request_headers.add(HeaderData.ADAPTER.decode(reader)); break;
                    case 7: {
                        try {
                            builder.request_body_state(BodyState.ADAPTER.decode(reader));
                        } catch (ProtoAdapter.EnumConstantNotFoundException e) {
                            builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
                        }
                        break;
                    }
                    case 8: builder.request_failed(ProtoAdapter.BOOL.decode(reader)); break;
                    case 9: builder.response_code(ProtoAdapter.INT32.decode(reader)); break;
                    case 10: builder.response_message(ProtoAdapter.STRING.decode(reader)); break;
                    case 11: builder.response_duration_ms(ProtoAdapter.INT64.decode(reader)); break;
                    case 12: builder.response_content_length(ProtoAdapter.INT64.decode(reader)); break;
                    case 13: builder.response_headers.add(HeaderData.ADAPTER.decode(reader)); break;
                    case 14: {
                        try {
                            builder.response_body_state(BodyState.ADAPTER.decode(reader));
                        } catch (ProtoAdapter.EnumConstantNotFoundException e) {
                            builder.addUnknownField(tag, FieldEncoding.VARINT, (long) e.value);
                        }
                        break;
                    }
                    case 15: builder.response_body_size(ProtoAdapter.INT64.decode(reader)); break;
                    case 16: builder.response_url(ProtoAdapter.STRING.decode(reader)); break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public LogData redact(LogData value) {
            LogData.Builder builder = value.newBuilder();
            Internal.redactElements(builder.request_headers, HeaderData.ADAPTER);
            Internal.redactElements(builder.response_headers, HeaderData.ADAPTER);
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}

